! -----------------------------------------------------------------------------
! Parallax - Intro Level
! Need initial story text, but I'll deal with that later.
! The office building will eventually be in a weird little town (think Gravity Falls), but for now it'll just be where we go first.
! -----------------------------------------------------------------------------
! Dirt Road Area
! -----------------------------------------------------------------------------

Room Init "DEAD END" with
    description
        "You are at the dead end of a dirt road. Off in the distance to the north, you can see a few buildings, maybe the edge of a town.",
    n_to DirtRoad;

Object -> Lamp "portable lamp" with
    name
        'lamp' 'torch' 'lantern' 'light',
    initial
        "There is a small handheld lamp nearby.",
    description [;
        if (self.location hasnt light)
            "The lamp gives off a soft glow.";
        "The lamp feels light enough, but the rust is starting to rub off and make your hand smell funny.";
    ],
    before [;
        SwitchOn:
            if (self hasnt visited) {
                give self visited;
                "You clean the lamp as best as you can on your sleeve, but it doesn't seem to help too much.^^";
                    }
        Examine:
            if (self hasnt visited)
                "The lamp looks pretty old. It must have been sitting here for a long time -- its glass is covered in a thick layer of dirt.";
            if (self has on)
                    self.description();
            "The lamp is currently off.";
    ],
    after [;
        SwitchOn:
            give self light on;
        SwitchOff:
            give self ~light ~on;
    ],
has switchable;



Room DirtRoad "DIRT ROAD" with
    description
        "You are on a dirt road. There's an ordinary office building to the north. You can also go back south, to the dead end.",
    before [;
        Go: if (KeyCard has scenery)
            KeyCard.cant_go();
    ],
    after [;
        Enter:
            if (OfficeDoor has open)
                give OfficeDoor ~open locked;
                "The door locks behind you.";
    ],
    n_to OfficeDoor,
    s_to Init;

Object -> KeyCard "keycard" with
    name 'keycard' 'key' 'card',
    description [;
        print "The keycard doesn't seem to have any identifying markings.";
        if (ExecOffice hasnt visited)
            "But it stands to reason that it might belong to someone who works in that office.";
        rtrue;
    ],
    before [;
        Take:
            give self ~scenery;
        Drop:
            "You're gonna need that, y'know.";
    ],
    cant_go [;
        "Hey, do you see that keycard by the side of the road?";
    ],
has scenery;